//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication2.QMRServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Room", Namespace="http://schemas.datacontract.org/2004/07/QMRService")]
    [System.SerializableAttribute()]
    public partial class Room : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OccupiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoomIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoomNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Occupied {
            get {
                return this.OccupiedField;
            }
            set {
                if ((this.OccupiedField.Equals(value) != true)) {
                    this.OccupiedField = value;
                    this.RaisePropertyChanged("Occupied");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoomID {
            get {
                return this.RoomIDField;
            }
            set {
                if ((this.RoomIDField.Equals(value) != true)) {
                    this.RoomIDField = value;
                    this.RaisePropertyChanged("RoomID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoomName {
            get {
                return this.RoomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomNameField, value) != true)) {
                    this.RoomNameField = value;
                    this.RaisePropertyChanged("RoomName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="QMRServiceReference.IRooms")]
    public interface IRooms {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRooms/GetRoomByRoomID", ReplyAction="http://tempuri.org/IRooms/GetRoomByRoomIDResponse")]
        WebApplication2.QMRServiceReference.Room GetRoomByRoomID(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRooms/GetRoomByRoomID", ReplyAction="http://tempuri.org/IRooms/GetRoomByRoomIDResponse")]
        System.Threading.Tasks.Task<WebApplication2.QMRServiceReference.Room> GetRoomByRoomIDAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRooms/GetRoomBySensorID", ReplyAction="http://tempuri.org/IRooms/GetRoomBySensorIDResponse")]
        WebApplication2.QMRServiceReference.Room GetRoomBySensorID(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRooms/GetRoomBySensorID", ReplyAction="http://tempuri.org/IRooms/GetRoomBySensorIDResponse")]
        System.Threading.Tasks.Task<WebApplication2.QMRServiceReference.Room> GetRoomBySensorIDAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRooms/GetListRooms", ReplyAction="http://tempuri.org/IRooms/GetListRoomsResponse")]
        WebApplication2.QMRServiceReference.Room[] GetListRooms();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRooms/GetListRooms", ReplyAction="http://tempuri.org/IRooms/GetListRoomsResponse")]
        System.Threading.Tasks.Task<WebApplication2.QMRServiceReference.Room[]> GetListRoomsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRooms/AddRoom", ReplyAction="http://tempuri.org/IRooms/AddRoomResponse")]
        void AddRoom(WebApplication2.QMRServiceReference.Room room);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRooms/AddRoom", ReplyAction="http://tempuri.org/IRooms/AddRoomResponse")]
        System.Threading.Tasks.Task AddRoomAsync(WebApplication2.QMRServiceReference.Room room);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRoomsChannel : WebApplication2.QMRServiceReference.IRooms, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoomsClient : System.ServiceModel.ClientBase<WebApplication2.QMRServiceReference.IRooms>, WebApplication2.QMRServiceReference.IRooms {
        
        public RoomsClient() {
        }
        
        public RoomsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RoomsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoomsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoomsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebApplication2.QMRServiceReference.Room GetRoomByRoomID(int value) {
            return base.Channel.GetRoomByRoomID(value);
        }
        
        public System.Threading.Tasks.Task<WebApplication2.QMRServiceReference.Room> GetRoomByRoomIDAsync(int value) {
            return base.Channel.GetRoomByRoomIDAsync(value);
        }
        
        public WebApplication2.QMRServiceReference.Room GetRoomBySensorID(int value) {
            return base.Channel.GetRoomBySensorID(value);
        }
        
        public System.Threading.Tasks.Task<WebApplication2.QMRServiceReference.Room> GetRoomBySensorIDAsync(int value) {
            return base.Channel.GetRoomBySensorIDAsync(value);
        }
        
        public WebApplication2.QMRServiceReference.Room[] GetListRooms() {
            return base.Channel.GetListRooms();
        }
        
        public System.Threading.Tasks.Task<WebApplication2.QMRServiceReference.Room[]> GetListRoomsAsync() {
            return base.Channel.GetListRoomsAsync();
        }
        
        public void AddRoom(WebApplication2.QMRServiceReference.Room room) {
            base.Channel.AddRoom(room);
        }
        
        public System.Threading.Tasks.Task AddRoomAsync(WebApplication2.QMRServiceReference.Room room) {
            return base.Channel.AddRoomAsync(room);
        }
    }
}
